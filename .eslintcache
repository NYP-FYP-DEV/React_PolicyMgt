[{"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\index.js":"1","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Header.js":"2","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Tasks.js":"3","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\About.js":"4","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Button.js":"5","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\App.js":"6","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\reportWebVitals.js":"7","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\AddTask.js":"8","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\index.js":"9","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Footer.js":"10","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Header.js":"11","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\AddTask.js":"12","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Task.js":"13","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\App.js":"14","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\reportWebVitals.js":"15","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\About.js":"16","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Button.js":"17","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Tasks.js":"18","C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\index.js":"19","C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\Tasks.js":"20","C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\About.js":"21","C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\Button.js":"22"},{"size":500,"mtime":1638644546000,"results":"23","hashOfConfig":"24"},{"size":700,"mtime":1638644546000,"results":"25","hashOfConfig":"24"},{"size":259,"mtime":1638644546000,"results":"26","hashOfConfig":"24"},{"size":186,"mtime":1638644546000,"results":"27","hashOfConfig":"24"},{"size":408,"mtime":1638644546000,"results":"28","hashOfConfig":"24"},{"size":3230,"mtime":1678683189819,"results":"29","hashOfConfig":"24"},{"size":362,"mtime":1638644546000,"results":"30","hashOfConfig":"24"},{"size":1347,"mtime":1638644546000,"results":"31","hashOfConfig":"24"},{"size":500,"mtime":1638644546000,"results":"32","hashOfConfig":"33"},{"size":203,"mtime":1638644546000,"results":"34","hashOfConfig":"33"},{"size":702,"mtime":1683251042443,"results":"35","hashOfConfig":"33"},{"size":3993,"mtime":1683709528722,"results":"36","hashOfConfig":"33"},{"size":517,"mtime":1683710268807,"results":"37","hashOfConfig":"33"},{"size":3590,"mtime":1683703636927,"results":"38","hashOfConfig":"33"},{"size":362,"mtime":1638644546000,"results":"39","hashOfConfig":"33"},{"size":186,"mtime":1638644546000,"results":"40","hashOfConfig":"33"},{"size":408,"mtime":1638644546000,"results":"41","hashOfConfig":"33"},{"size":259,"mtime":1638644546000,"results":"42","hashOfConfig":"33"},{"size":500,"mtime":1638644546000,"results":"43","hashOfConfig":"44"},{"size":259,"mtime":1638644546000,"results":"45","hashOfConfig":"44"},{"size":186,"mtime":1638644546000,"results":"46","hashOfConfig":"44"},{"size":408,"mtime":1638644546000,"results":"47","hashOfConfig":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"76olr6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pq1ezr",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o10pjw",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\index.js",[],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Header.js",[],["98","99"],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Tasks.js",[],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\About.js",[],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\Button.js",[],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\App.js",["100","101","102"],"import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  // useEffect(() => {\n  //   const getTasks = async () => {\n  //     //const tasksFromServer = await fetchTasks()\n  //     //setTasks(tasksFromServer)\n  //   }\n\n  //   getTasks()\n  // }, [])\n\n\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3005/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3005/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    /*\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    \n    setTasks([...tasks, data])\n*/\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    // const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    //   method: 'DELETE',\n    // })\n    // //We should control the response status to decide if we will change the state or not.\n    // res.status === 200\n    //   ? setTasks(tasks.filter((task) => task.id !== id))\n    //   : alert('Error Deleting This Task')\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n  //  async (id) => {\n  //   const taskToToggle = await fetchTask(id)\n  //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-type': 'application/json',\n  //     },\n  //     body: JSON.stringify(updTask),\n  //   })\n\n  //   const data = await res.json()\n\n     setTasks(\n      tasks.map((task) =>\n        task.id === id ? {} : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  'No Tasks To Show'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\reportWebVitals.js",[],"C:\\NYP\\FYP\\react\\react-crash-2021-master\\src\\components\\AddTask.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\index.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Footer.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Header.js",[],["103","104"],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\AddTask.js",["105","106","107"],"import { useState, useEffect } from 'react'\nimport axios from \"axios\";\n\n\n\nconst AddTask = ({ onAdd, setLoading }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const resetClientData = () => {\n    return {\n      \"emailAddress\": \"\",\n      \"duration\": \"\",\n      \"date_of_policy\": \"\",\n      \"phone\": \"\",\n      \"name\": \"\",\n      \"price\": \"\"\n    }\n  }\n\n\n\n  const [clientData, setClientData] = useState(resetClientData())\n\n  const [input, setInput] = useState(\"\")\n\n  useEffect(() => {\n    console.log('clientData == ', clientData)\n  }, [clientData])\n\n  const onSubmit = (e) => {\n    setLoading(true)\n    e.preventDefault()\n\n\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: 'https://wqt2n05095.execute-api.ap-southeast-1.amazonaws.com/RetreivePolicyById?policyId=1683006174079',\n      headers: {}\n    };\n\n    axios.request(config)\n      .then((response) => {\n        console.log(JSON.stringify(response.data));\n        console.log('Hello')\n\n        onAdd(clientData)\n        resetClientData()\n        setText('')\n        setDay('')\n        setReminder(false)\n        setLoading(false)\n      })\n\n      .catch(\n        (error) => {\n          alert('Blockchain network error!!')\n          setLoading(false)\n          console.log(error)\n        }\n      );\n    /* \n     onAdd({ text, day, reminder })\n     setText('')\n     setDay('')\n     setReminder(false)\n     */\n  }\n\n  const handleChange = (e) => {\n    setClientData(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  }\n\n  return (\n\n    (<form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Name</label>\n        <input\n          type='text'\n          name=\"name\"\n          placeholder='name'\n          value={clientData.name}\n          onChange={(e) => {\n            setText(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Email Adress</label>\n        <input\n          type='text'\n          name=\"emailAddress\"\n          placeholder='xxx@xxx'\n          value={clientData.emailAddress}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Phone Number</label>\n        <input\n          type='text'\n          name=\"phone\"\n          placeholder='1234567'\n          value={clientData.phone}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Date of Policy</label>\n        <input\n          type='text'\n          name=\"date_of_policy\"\n          placeholder='YYYY,MM,DD'\n          value={clientData.date_of_policy}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Duration in number of years</label>\n        <input\n          type='text'\n          name=\"duration\"\n          value={clientData.duration}\n          placeholder=''\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Policy Premium in SGD</label>\n        <input\n          type='text'\n          name=\"price\"\n          placeholder=''\n          value={clientData.price}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>)\n    //(loading ? <InfinitySpin width='200' color=\"#4fa94d\" /> : \"\")\n  )\n}\n\nexport default AddTask\n","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Task.js",["108"],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\App.js",["109","110","111"],"import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nimport { InfinitySpin } from 'react-loader-spinner'\n//(loading ? <InfinitySpin width='200' color=\"#4fa94d\" /> : \"\")\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  // useEffect(() => {\n  //   const getTasks = async () => {\n  //     //const tasksFromServer = await fetchTasks()\n  //     //setTasks(tasksFromServer)\n  //   }\n\n  //   getTasks()\n  // }, [])\n\n\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3005/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3005/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    /*\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    \n    setTasks([...tasks, data])\n*/\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    console.log(task)\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    // const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    //   method: 'DELETE',\n    // })\n    // //We should control the response status to decide if we will change the state or not.\n    // res.status === 200\n    //   ? setTasks(tasks.filter((task) => task.id !== id))\n    //   : alert('Error Deleting This Task')\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    //  async (id) => {\n    //   const taskToToggle = await fetchTask(id)\n    //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    //     method: 'PUT',\n    //     headers: {\n    //       'Content-type': 'application/json',\n    //     },\n    //     body: JSON.stringify(updTask),\n    //   })\n\n    //   const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? {} : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n\n                {showAddTask && <AddTask onAdd={addTask} setLoading={setLoading} />}\n                {tasks.length > 0 ?\n                  (<Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder} />)\n                  : (\n                    'No Tasks To Show'\n                  )}\n                {\n                  loading && <InfinitySpin width='200' color=\"#4fa94d\" />\n                }\n\n              </>\n\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\reportWebVitals.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\About.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Button.js",[],"C:\\NYP\\FYP\\Github\\IPP\\app\\React_PolicyMgt\\src\\components\\Tasks.js",[],["112","113"],"C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\index.js",[],"C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\Tasks.js",[],"C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\About.js",[],"C:\\NYP\\FYP\\Github\\deploy\\FYP2023_P1\\React_PolicyMgt\\src\\components\\Button.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":20,"nodeType":"120","messageId":"121","endLine":1,"endColumn":29},{"ruleId":"118","severity":1,"message":"122","line":25,"column":9,"nodeType":"120","messageId":"121","endLine":25,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":33,"column":9,"nodeType":"120","messageId":"121","endLine":33,"endColumn":18},{"ruleId":"114","replacedBy":"124"},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":13},{"ruleId":"118","severity":1,"message":"127","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":18},{"ruleId":"118","severity":1,"message":"128","line":26,"column":17,"nodeType":"120","messageId":"121","endLine":26,"endColumn":25},{"ruleId":"118","severity":1,"message":"129","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":1,"column":20,"nodeType":"120","messageId":"121","endLine":1,"endColumn":29},{"ruleId":"118","severity":1,"message":"122","line":31,"column":9,"nodeType":"120","messageId":"121","endLine":31,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":39,"column":9,"nodeType":"120","messageId":"121","endLine":39,"endColumn":18},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'fetchTasks' is assigned a value but never used.","'fetchTask' is assigned a value but never used.",["132"],["133"],"'day' is assigned a value but never used.","'reminder' is assigned a value but never used.","'setInput' is assigned a value but never used.","'FaTimes' is defined but never used.",["132"],["133"],"no-global-assign","no-unsafe-negation"]