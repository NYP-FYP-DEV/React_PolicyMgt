{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","name","emailAddress","phone","date_of_policy","duration","price","Tasks","tasks","map","index","AddTask","setLoading","useState","setText","setDay","setReminder","clientData","setClientData","useEffect","console","log","handleChange","e","prev","target","value","onSubmit","preventDefault","config","method","maxBodyLength","Infinity","url","headers","axios","request","then","response","JSON","stringify","data","catch","error","alert","type","placeholder","onChange","About","App","loading","showAddTask","setShowAddTask","setTasks","addTask","a","id","Math","floor","random","newTask","deleteTask","filter","path","element","length","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1e9b49b.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation()\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      {location.pathname === '/' && (\n        <Button\n          color={showAdd ? 'red' : 'green'}\n          text={showAdd ? 'Close' : 'Add'}\n          onClick={onAdd}\n        />\n      )}\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker @',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to='/about'>About</Link>\n    </footer>\n  )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div>\n      <p>\n        Name : {task.name}{' '}\n      </p>\n      <p>\n        Email Address : {task.emailAddress}{' '}\n      </p>\n      <p>\n        Phone : {task.phone}{' '}\n      </p>\n      <p>\n        Date_of_policy : {task.date_of_policy}{' '}\n      </p>\n      <p>\n        Duration : {task.duration}{' '}\n      </p>\n      <p>\n        Price : {task.price}{' '}\n      </p>\n    </div>\n  )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task, index) => (\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState, useEffect } from 'react'\nimport axios from \"axios\";\n\n\n\nconst AddTask = ({ onAdd, setLoading }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const resetClientData = () => {\n    return {\n      \"emailAddress\": \"\",\n      \"duration\": \"\",\n      \"date_of_policy\": \"\",\n      \"phone\": \"\",\n      \"name\": \"\",\n      \"price\": \"\"\n    }\n  }\n\n\n\n  const [clientData, setClientData] = useState(resetClientData())\n\n  const [input, setInput] = useState(\"\")\n\n  useEffect(() => {\n    console.log('clientData == ', clientData)\n  }, [clientData])\n\n  const onSubmit = (e) => {\n    setLoading(true)\n    e.preventDefault()\n\n\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n\n    let config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: 'https://wqt2n05095.execute-api.ap-southeast-1.amazonaws.com/RetreivePolicyById?policyId=1683006174079',\n      headers: {}\n    };\n\n    axios.request(config)\n      .then((response) => {\n        console.log(JSON.stringify(response.data));\n        console.log('Hello')\n\n        onAdd(clientData)\n        resetClientData()\n        setText('')\n        setDay('')\n        setReminder(false)\n        setLoading(false)\n      })\n\n      .catch(\n        (error) => {\n          alert('Blockchain network error!!')\n          setLoading(false)\n          console.log(error)\n        }\n      );\n    /* \n     onAdd({ text, day, reminder })\n     setText('')\n     setDay('')\n     setReminder(false)\n     */\n  }\n\n  const handleChange = (e) => {\n    setClientData(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  }\n\n  return (\n\n    (<form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Name</label>\n        <input\n          type='text'\n          name=\"name\"\n          placeholder='name'\n          value={clientData.name}\n          onChange={(e) => {\n            setText(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Email Adress</label>\n        <input\n          type='text'\n          name=\"emailAddress\"\n          placeholder='xxx@xxx'\n          value={clientData.emailAddress}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Phone Number</label>\n        <input\n          type='text'\n          name=\"phone\"\n          placeholder='1234567'\n          value={clientData.phone}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Date of Policy</label>\n        <input\n          type='text'\n          name=\"date_of_policy\"\n          placeholder='YYYY,MM,DD'\n          value={clientData.date_of_policy}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Duration in number of years</label>\n        <input\n          type='text'\n          name=\"duration\"\n          value={clientData.duration}\n          placeholder=''\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n      <div className='form-control'>\n        <label>Policy Premium in SGD</label>\n        <input\n          type='text'\n          name=\"price\"\n          placeholder=''\n          value={clientData.price}\n          onChange={(e) => {\n            setDay(e.target.value)\n            handleChange(e)\n          }\n          }\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>)\n    //(loading ? <InfinitySpin width='200' color=\"#4fa94d\" /> : \"\")\n  )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to='/'>Go Back</Link>\n    </div>\n  )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nimport { InfinitySpin } from 'react-loader-spinner'\n//(loading ? <InfinitySpin width='200' color=\"#4fa94d\" /> : \"\")\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  // useEffect(() => {\n  //   const getTasks = async () => {\n  //     //const tasksFromServer = await fetchTasks()\n  //     //setTasks(tasksFromServer)\n  //   }\n\n  //   getTasks()\n  // }, [])\n\n\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3005/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:3005/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    /*\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n    \n    setTasks([...tasks, data])\n*/\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    console.log(task)\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    // const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    //   method: 'DELETE',\n    // })\n    // //We should control the response status to decide if we will change the state or not.\n    // res.status === 200\n    //   ? setTasks(tasks.filter((task) => task.id !== id))\n    //   : alert('Error Deleting This Task')\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    //  async (id) => {\n    //   const taskToToggle = await fetchTask(id)\n    //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    //   const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    //     method: 'PUT',\n    //     headers: {\n    //       'Content-type': 'application/json',\n    //     },\n    //     body: JSON.stringify(updTask),\n    //   })\n\n    //   const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? {} : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n\n                {showAddTask && <AddTask onAdd={addTask} setLoading={setLoading} />}\n                {tasks.length > 0 ?\n                  (<Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder} />)\n                  : (\n                    'No Tasks To Show'\n                  )}\n                {\n                  loading && <InfinitySpin width='200' color=\"#4fa94d\" />\n                }\n\n              </>\n\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}